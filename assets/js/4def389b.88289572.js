(self.webpackChunkguzzle=self.webpackChunkguzzle||[]).push([[7057],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=a.createContext({}),u=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=i,g=m["".concat(c,".").concat(d)]||m[d]||s[d]||r;return n?a.createElement(g,o(o({ref:t},p),{},{components:n})):a.createElement(g,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<r;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5016:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return s}});var a=n(2122),i=n(9756),r=(n(7294),n(3905)),o=["components"],l={id:"effective_column_mapping",title:"Effective Column Mapping"},c={unversionedId:"how_to_guides/ingest_data/effective_column_mapping",id:"how_to_guides/ingest_data/effective_column_mapping",isDocsHomePage:!1,title:"Effective Column Mapping",description:"Currently this feature is only available for Ingestion activity only.",source:"@site/docs/how_to_guides/ingest_data/Effective Column Mapping.md",sourceDirName:"how_to_guides/ingest_data",slug:"/how_to_guides/ingest_data/effective_column_mapping",permalink:"/guzzle_docs/docs/how_to_guides/ingest_data/effective_column_mapping",editUrl:"https://github.com/ja-guzzle/docs/blob/master/docs/how_to_guides/ingest_data/Effective Column Mapping.md",version:"current",frontMatter:{id:"effective_column_mapping",title:"Effective Column Mapping"},sidebar:"sideBar",previous:{title:"Ingestion Datatype Validation",permalink:"/guzzle_docs/docs/how_to_guides/ingest_data/ingestion_datatype_validation"},next:{title:"Pipeline",permalink:"/guzzle_docs/docs/how_to_guides/ingest_data/pipeline"}},u=[{value:"Overview",id:"overview",children:[]},{value:"Layout",id:"layout",children:[]}],p={toc:u};function s(e){var t=e.components,n=(0,i.Z)(e,o);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Currently this feature is only available for Ingestion activity only."))),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Visualize which column will be mapped to Target or Reject."),(0,r.kt)("li",{parentName:"ul"},"Before source columns write into Target or Reject, a column will go through a bunch of operations, which leads to the column being altered.",(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},"It may rename using a feature like a clean column."),(0,r.kt)("li",{parentName:"ul"},"It may derive from another column using a feature like override column mapping."),(0,r.kt)("li",{parentName:"ul"},"It may filter columns using a feature like column restriction."),(0,r.kt)("li",{parentName:"ul"},"It may override using a feature like Transform SQL."),(0,r.kt)("li",{parentName:"ul"},"It may not map to Target or Reject due to different ",(0,r.kt)("inlineCode",{parentName:"li"},"Inherit columns and datatype")," strategies."),(0,r.kt)("li",{parentName:"ul"},"It may change the data type using a feature like schema drift."))),(0,r.kt)("li",{parentName:"ul"},"We can also find out the definition of the auto-create table.")),(0,r.kt)("a",{href:"https://guzzle.justanalytics.com/img/docs/how-to-guides/ingest_data/column_mapping.png",target:"_self"},(0,r.kt)("img",{src:"/img/docs/how-to-guides/ingest_data/column_mapping.png"})),(0,r.kt)("h2",{id:"layout"},"Layout"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Raw Source:")," a source before any transformation apply by guzzle.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"Source:")," a source after all transformations apply by guzzle."),(0,r.kt)("a",{href:"https://guzzle.justanalytics.com/img/docs/how-to-guides/ingest_data/effective_column_mapping.png",target:"_self"},(0,r.kt)("img",{src:"/img/docs/how-to-guides/ingest_data/effective_column_mapping.png"}))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Empty cell represents ",(0,r.kt)("inlineCode",{parentName:"p"},"NULL")," or break in the flow, for instance, ",(0,r.kt)("inlineCode",{parentName:"p"},"col2")," has been excluded via column restriction feature and thus target ",(0,r.kt)("inlineCode",{parentName:"p"},"col2")," going to be mapped with ",(0,r.kt)("inlineCode",{parentName:"p"},"NULL"),", but look at last raw ",(0,r.kt)("inlineCode",{parentName:"p"},"col2")," is part of Raw Source but not part of the Source.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("inlineCode",{parentName:"p"},"*")," denote alternation, in case of column name meaning a new column will be added to the target, in case of data type meaning column datatype will be altered.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"Columns that are not mapped to Target or Reject will be appeared at last just like ",(0,r.kt)("inlineCode",{parentName:"p"},"col2")))))}s.isMDXComponent=!0}}]);